/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.parks.telas;

import java.util.regex.Pattern;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * 
 * @author User
 */
@SuppressWarnings("serial")
public class IPNEPanel extends javax.swing.JFrame {

	private DefaultListModel nEListModel;
	private int index;
	private boolean edit = false;

	/**
	 * Creates new form IPNEPanel
	 */
	public IPNEPanel() {
		initComponents();
		init();
	}

	public IPNEPanel(DefaultListModel nEListModel) {
		initComponents();
		init();
		this.nEListModel = nEListModel;
	}

	public IPNEPanel(DefaultListModel nEListModel, int index,
			Object varbindObject) {
		initComponents();
		init();
		this.edit = true;
		this.nEListModel = nEListModel;
		this.index = index;
		this.setTitle("Edit IP NE");
		jButtonAddIP.setText("Update IP");
		jTextFieldIPNE.setText((String) varbindObject);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		jPanel1 = new javax.swing.JPanel();
		jPanelForm = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jTextFieldIPNE = new javax.swing.JTextField();
		jButtonAddIP = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Add IP NE");
		getContentPane().setLayout(new java.awt.FlowLayout());

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("IP NE"));
		jPanel1.setLayout(new java.awt.BorderLayout());

		jPanelForm.setLayout(new java.awt.GridBagLayout());

		jLabel1.setText("IP NE:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(15, 5, 20, 20);
		jPanelForm.add(jLabel1, gridBagConstraints);

		jTextFieldIPNE.setColumns(20);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(15, 0, 20, 20);
		jPanelForm.add(jTextFieldIPNE, gridBagConstraints);

		jButtonAddIP.setText("Add IP");
		jButtonAddIP.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonAddIPActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		jPanelForm.add(jButtonAddIP, gridBagConstraints);

		jPanel1.add(jPanelForm, java.awt.BorderLayout.CENTER);

		getContentPane().add(jPanel1);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void init() {
		this.setLocationRelativeTo(null);
	}

	private void jButtonAddIPActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonAddIPActionPerformed
		if (verificarCampos()) {
			if (!edit) {
				nEListModel.addElement(jTextFieldIPNE.getText());
				JOptionPane.showMessageDialog(null, "IP added", "Success",
						JOptionPane.INFORMATION_MESSAGE);
			} else {
				nEListModel.set(index, jTextFieldIPNE.getText());
				JOptionPane.showMessageDialog(null, "IP edited", "Success",
						JOptionPane.INFORMATION_MESSAGE);
			}
			dispose();
		}
	}// GEN-LAST:event_jButtonAddIPActionPerformed

	private boolean isIPAddress(String str) {
		Pattern ipPattern = Pattern
				.compile("\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");
		return ipPattern.matcher(str).matches();
	}

	private boolean verificarCampos() {
		if (jTextFieldIPNE.getText().isEmpty()
				|| jTextFieldIPNE.getText().trim().length() == 0) {
			JOptionPane.showMessageDialog(null, "IP is empty", "Error",
					JOptionPane.ERROR_MESSAGE);
			return false;
		}
		if (!isIPAddress(jTextFieldIPNE.getText())) {
			JOptionPane.showMessageDialog(null, "IP Manager is not valid.",
					"Error", JOptionPane.ERROR_MESSAGE);
			return false;
		}

		return true;
	}

	public DefaultListModel getnEListModel() {
		return nEListModel;
	}

	public void setnEListModel(DefaultListModel nEListModel) {
		this.nEListModel = nEListModel;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButtonAddIP;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanelForm;
	private javax.swing.JTextField jTextFieldIPNE;
	// End of variables declaration//GEN-END:variables
}
